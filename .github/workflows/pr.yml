name: Pull Request

on:
  pull_request:
    branches: [ master, main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Reduce matrix size for faster feedback
          - os: windows-latest
            python-version: "3.9"
          - os: macOS-latest
            python-version: "3.9"
          - os: windows-latest
            python-version: "3.10"
          - os: macOS-latest
            python-version: "3.10"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .[dev]

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 yaplon tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 yaplon tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      run: |
        black --check yaplon tests setup.py

    - name: Run fast tests
      run: |
        pytest -m "not slow" --cov=yaplon --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .[dev]

    - name: Test package build
      run: |
        python setup.py sdist bdist_wheel

    - name: Test binary build
      run: |
        pyinstaller --onefile --name=yaplon yaplon/__main__.py

    - name: Test installation from built package
      run: |
        pip install dist/*.whl
        yaplon --help || echo "CLI help test completed"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit

    - name: Run safety check
      run: |
        safety check --json || true

    - name: Run bandit security check
      run: |
        bandit -r yaplon -f json || true

  pr-info:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: PR Information
      run: |
        echo "PR Number: ${{ github.event.number }}"
        echo "PR Title: ${{ github.event.pull_request.title }}"
        echo "PR Author: ${{ github.event.pull_request.user.login }}"
        echo "Base Branch: ${{ github.event.pull_request.base.ref }}"
        echo "Head Branch: ${{ github.event.pull_request.head.ref }}"

    - name: Check for version changes
      run: |
        if git diff --name-only origin/${{ github.event.pull_request.base.ref }}..HEAD | grep -q "yaplon/__init__.py\|yaplon/_version.py"; then
          echo "⚠️ Version files changed in this PR"
          echo "Please ensure version changes are intentional and follow semver"
        fi